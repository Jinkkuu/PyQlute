name: Build and Package Binary

on:
  schedule:
    # Runs at 11 PM EST daily
    - cron: '0 4 * * *'  # Note: 11 PM EST is 4 AM UTC

jobs:
  check-commits:
    name: Checking if there are changes
    runs-on: ubuntu-latest 
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Check for commits in the last 24 hours
        id: check-commits
        run: |
          # Get the current date and time in UTC
          current_time=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          # Get the date and time 24 hours ago in UTC
          past_time=$(date -u -d "-24 hours" +"%Y-%m-%dT%H:%M:%SZ")
          # Check for commits in the last 24 hours
          commits=$(git log --since="$past_time" --until="$current_time" --pretty=format:'%h')
          echo "Commits in the last 24 hours: $commits"
          if [ -z "$commits" ]; then
            echo "No commits found."
            echo "::set-output name=has_commits::false"
          else
            echo "Commits found."
            echo "::set-output name=has_commits::true"
          fi
  windows-build:
    name: Windows build
    needs: check-commits
    if: needs.check-commits.outputs.has_commits == 'true'
    runs-on: windows-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python 3
      uses: actions/setup-python@v2
      with:
        python-version: 3.x

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller pygame tweener requests

    - name: Build with PyInstaller
      run: |
        pyinstaller --hidden-import=pygame --hidden-import=tweener --onefile --name qlute --add-data "data:data" launcher.py
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Windows-Qlute
        path: ./dist
  linux-build:
    name: Linux build
    needs: check-commits
    if: needs.check-commits.outputs.has_commits == 'true'
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python 3
      uses: actions/setup-python@v2
      with:
        python-version: 3.x

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller pygame tweener requests
    - name: Build with PyInstaller
      run: |
        pyinstaller --hidden-import=pygame --hidden-import=tweener --onefile --name qlute --add-data "data:data" launcher.py
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Linux-Qlute
        path: ./dist
  Release:
    name: Create Game Release
    runs-on: ubuntu-latest
    needs: [linux-build, windows-build]
    if: ${{ needs.windows-build.result == 'success' && needs.windows-build.result == 'success' }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: "✏️ Generate release changelog"
      uses: heinrichreimer/action-github-changelog-generator@v2.3
      with:
        token: ${{ secrets.GITHUB_TOKEN }} 
    - name: Download de artifacts
      uses: actions/download-artifact@v4
      with:
          name: Linux-Qlute
    - uses: actions/download-artifact@v4
      with:
          name: Windows-Qlute
    - name: Get current date for Release
      id: date
      run: echo "::set-output name=date::$(date +'%Y.%m.%d')"
    - name: release
      uses: actions/create-release@v1
      id: create_release
      with:
        draft: false
        prerelease: false
        release_name: ${{ steps.date.outputs.date }}
        tag_name: ${{ steps.date.outputs.date }} 
        body_path: CHANGELOG.md
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: upload linux artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: qlute
        asset_name: qlute
        asset_content_type: application/octet-stream
    - name: upload windows artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: qlute.exe
        asset_name: qlute.exe
        asset_content_type: application/octet-stream
