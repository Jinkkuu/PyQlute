name: Build and Package Binary

on:
  push:
    branches:
      - online

jobs:
  windows-build:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python 3
      uses: actions/setup-python@v2
      with:
        python-version: 3.x

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller pygame tweener requests

    - name: Build with PyInstaller
      run: |
        pyinstaller --hidden-import=pygame --hidden-import=tweener --onefile --name qlute --add-data "data:data" launcher.py
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Windows-Qlute
        path: ./dist
  linux-build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python 3
      uses: actions/setup-python@v2
      with:
        python-version: 3.x

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller pygame tweener requests
    - name: Build with PyInstaller
      run: |
        pyinstaller --hidden-import=pygame --hidden-import=tweener --onefile --name qlute --add-data "data:data" launcher.py
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Linux-Qlute
        path: ./dist
  Release:
    name: Create Game Release
    runs-on: ubuntu-latest
    needs: [linux-build, windows-build]
    if: ${{ needs.windows-build.result == 'success' && needs.windows-build.result == 'success' }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Download math result for job 1
      uses: actions/download-artifact@v4
      with:
          name: Linux-Qlute
    - uses: actions/download-artifact@v4
      with:
          name: Windows-Qlute
    - name: Get current date for Release
      id: date
      run: echo "::set-output name=date::$(date +'%Y.%m.%d')"
    - name: release
      uses: actions/create-release@v1
      id: create_release
      with:
        draft: false
        prerelease: false
        release_name: ${{ steps.date.outputs.date }}
        tag_name: ${{ steps.date.outputs.date }} 
        body: |
         This release has been automated
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: upload linux artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: qlute
        asset_name: qlute
        asset_content_type: application/octet-stream
    - name: upload windows artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: qlute.exe
        asset_name: qlute.exe
        asset_content_type: application/octet-stream
